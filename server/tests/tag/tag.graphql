fragment TagFields on Tag {
  id
  name
}

fragment Tag on Tag {
  ...TagFields
}

query findUniqueTag($where: TagWhereUniqueInput!) {
  findUniqueTag(where: $where) {
    ...Tag
  }
}

query findManyTag(
  $where: TagWhereInput
  $orderBy: [TagOrderByWithRelationInput!]
  $cursor: TagWhereUniqueInput
  $skip: Int
  $take: Int
) {
  findManyTag(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Tag
  }
}

query findManyTagCount(
  $where: TagWhereInput
  $orderBy: [TagOrderByWithRelationInput!]
  $cursor: TagWhereUniqueInput
  $skip: Int
  $take: Int
) {
  findManyTagCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}

mutation createOneTag($data: TagCreateInput!) {
  createOneTag(data: $data) {
    ...Tag
  }
}

mutation updateOneTag($where: TagWhereUniqueInput!, $data: TagUpdateInput!) {
  updateOneTag(where: $where, data: $data) {
    ...Tag
  }
}

mutation deleteOneTag($where: TagWhereUniqueInput!) {
  deleteOneTag(where: $where) {
    ...Tag
  }
}

mutation deleteManyTag($where: TagWhereInput) {
  deleteManyTag(where: $where) {
    count
  }
}

mutation updateManyTag($where: TagWhereInput, $data: TagUpdateManyMutationInput!) {
  updateManyTag(where: $where, data: $data) {
    count
  }
}
