datasource db {
  provider = "postgresql"
  url      = env("DEVELOPMENT_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Club {
  id              String               @id @default(cuid())
  name            String?              @unique
  slug            String?              @unique
  description     String?
  email           String?
  meetingDate     String?
  location        String?
  approval        String?              @default("UNAPPROVED") //alternate value APPROVED
  status          String?              @default("DRAFT") //alternate values REVIEW / APPROVED
  availability    String               @default("OPEN") //alternate value CLOSED
  links           Link[]
  applicationInfo ClubApplicationInfo?
  tags            Tag[]
  members         User[]               @relation("members")
  editors         User[]               @relation("editors")
  roles           Role[]
  invites         Invite[]
}

model Link {
  id     String  @id @default(cuid())
  club   Club    @relation(fields: [clubId], references: [id])
  clubId String
  name   String?
  link   String
  type   String //can take values like WEBSITE / DISCORD / INSTAGRAM / SNAPCHAT
}

model ClubApplicationInfo {
  id      String @id @default(cuid())
  teacher User   @relation(fields: [userId], references: [id])
  userId  String
  club    Club   @relation(fields: [clubId], references: [id])
  clubId  String @unique

  purpose                             String
  membershipRequirements              String
  dutiesOfMembers                     String
  titlesAndDutiesOfOfficers           String
  selectionOfOfficers                 String
  officerMinimumGPA                   Float
  percentAttendanceForOfficialMeeting Int
  percentAttendanceToApproveDecision  Int
}

model Tag {
  id              String @id @default(cuid())
  name            String @unique
  clubs           Club[]
  interestedUsers User[]
}

model User {
  id            String                @id @default(cuid())
  ccid          String                @unique
  firstname     String
  lastname      String
  email         String                @unique
  emailVerified Boolean
  password      String
  grade         String //values: FRESHMAN, SOPHMORE, JUNIOR, SENIOr< TEACHER
  type          String                @default("STUDENT") //alternative value: TEACHER
  interests     Tag[]
  clubs         Club[]                @relation("members")
  canEdit       Club[]                @relation("editors")
  advisor       ClubApplicationInfo[]
  roles         Role[]
  invites       Invite[]
}

model Invite {
  id     String @id @default(cuid())
  status String @default("PENDING") //alternate values: ACCEPTED, DECLINED
  club   Club   @relation(fields: [clubId], references: [id])
  clubId String
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Role {
  id     String @id @default(cuid())
  name   String
  color  String
  users  User[]
  club   Club   @relation(fields: [clubId], references: [id])
  clubId String
  type   String @default("MEMBER") //alternate value: LEADER
}
