generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  // url                  = env("PLANETSCALE_DEV_URL")
  // url                  = env("ABHI_DEV_URL")
  url                  = env("LOCAL_DEV_URL")
  referentialIntegrity = "prisma"
}

model Club {
  id           String           @id @default(cuid())
  name         String?          @unique
  slug         String?          @unique
  description  String?          @db.LongText
  email        String?
  meetingDate  String?
  location     String?
  approval     Boolean?         @default(false)
  status       ClubStatus       @default(DRAFT)
  availability ClubAvailability @default(OPEN)
  teacherId    String?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  invites      Invite[]
  links        Link[]
  roles        Role[]
  tags         Tag[]
  members      User[]           @relation("members")
}

model Link {
  id        String   @id @default(cuid())
  clubId    String
  name      String
  link      String
  type      LinkType @default(WEBSITE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  club      Club     @relation(fields: [clubId], references: [id], onDelete: Cascade)
}

model Tag {
  id              String   @id @default(cuid())
  name            String   @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  clubs           Club[]
  interestedUsers User[]
}

model User {
  id                String      @id @default(cuid())
  ccid              String      @unique
  studentId         String      @unique
  firstname         String
  lastname          String
  email             String      @unique
  emailVerified     Boolean     @default(true)
  verificationToken String?     @unique
  active            Boolean     @default(false)
  password          String
  grade             Grade
  type              AccountType @default(STUDENT)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  invites           Invite[]
  roles             Role[]
  interests         Tag[]
  clubs             Club[]      @relation("members")
}

model Invite {
  id        String       @id @default(cuid())
  status    InviteStatus @default(PENDING)
  type      InviteType   @default(INCOMING)
  clubId    String
  userId    String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  club      Club         @relation(fields: [clubId], references: [id], onDelete: Cascade)
  user      User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  roles     Role[]
}

model Role {
  id          String           @id @default(cuid())
  name        String
  color       String
  description String           @db.LongText
  clubId      String
  type        RoleType         @default(MEMBER)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  club        Club             @relation(fields: [clubId], references: [id], onDelete: Cascade)
  invites     Invite[]
  users       User[]
  permanent   Boolean          @default(false)
  permissions RolePermissions?
  rank        Int?             @default(0)
}

model RolePermissions {
  id                String  @id @default(cuid())
  role              Role    @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId            String
  canManageClubPage Boolean @default(false)
  canManageInvites  Boolean @default(false)
  canManageMembers  Boolean @default(false)
}

enum RoleType {
  MEMBER
  LEADER
  PRESIDENT
  ADVISOR
}

enum Grade {
  FRESHMAN
  SOPHMORE
  JUNIOR
  SENIOR
  TEACHER
}

enum InviteStatus {
  PENDING
  DECLINED
  ACCEPTED
}

enum InviteType {
  OUTGOING
  INCOMING
}

enum ClubAvailability {
  OPEN
  INVITE_ONLY
  CLOSED
}

enum AccountType {
  STUDENT
  TEACHER
  ASB
  ADMIN
}

enum ClubStatus {
  DRAFT
  REVIEW
  APPROVED
  DECLINED
}

enum LinkType {
  EMAIL
  TWITTER
  INSTAGRAM
  DISCORD
  YOUTUBE
  FACEBOOK
  REMIND
  SNAPCHAT
  WEBSITE
}
